name: CI/CD to Google Cloud Run
on:
  push:
    branches:
      - main

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/expense-tracker:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/expense-tracker:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

         # Clean old docker stuff on VM
      - name: Cleanup old Docker
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo ">>> Removing old containers & images but KEEPING volumes..."
            cd ~/expense-tracker || true
            docker-compose down --remove-orphans || true
            docker image prune -af || true   # only images, not volumes
            docker container prune -f || true
            docker network prune -f || true

            rm -rf ~/expense-tracker/docker-compose.yml
            mkdir -p ~/expense-tracker || true

      # Copy docker-compose.yml
      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.VM_USER }}/expense-tracker"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            # Create project folder if it doesn't exist
            mkdir -p ~/expense-tracker || true
            cd ~/expense-tracker

            # Stop current containers
            docker-compose down --remove-orphans || true

            # Clean old images and containers
            docker image prune -af || true
            docker container prune -f || true

            # Pull latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/expense-tracker:latest

            # Start containers
            docker-compose up -d --remove-orphans
